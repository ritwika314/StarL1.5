
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x98\n#9\xb2zV\xdd\x95M\x06a\xed\xb9\x04\x1a'
    
_lr_action_items = {'LID':([9,10,11,15,19,41,45,47,60,67,69,70,74,78,79,80,83,85,87,89,90,92,96,97,98,99,100,101,102,103,104,105,107,108,111,113,134,135,139,141,142,143,147,149,],[-57,-58,-59,23,23,23,-6,23,-9,23,23,-7,23,23,-8,-28,-27,23,-30,-29,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-36,-35,-33,-34,-32,23,23,-31,]),'CID':([4,9,10,11,15,19,41,45,47,60,67,69,70,74,78,79,80,83,85,87,89,90,92,96,97,98,99,100,101,102,103,104,105,107,108,111,113,134,135,139,141,142,143,147,149,],[7,-57,-58,-59,24,24,24,-6,24,-9,24,24,-7,24,24,-8,-28,-27,24,-30,-29,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-36,-35,-33,-34,-32,24,24,-31,]),'FNUM':([29,33,67,74,78,90,92,96,97,98,99,100,101,102,103,104,105,107,111,113,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ROBOT':([41,45,47,60,70,79,],[46,-6,46,-9,-7,-8,]),'LCURLY':([6,34,56,58,65,81,140,146,],[17,41,59,61,69,108,143,147,]),'ATOMIC':([69,80,83,85,87,89,108,134,135,139,141,142,143,147,149,],[81,-28,-27,81,-30,-29,81,-36,-35,-33,-34,-32,81,81,-31,]),'BR':([2,],[4,]),'TRUE':([29,33,67,74,78,90,92,96,97,98,99,100,101,102,103,104,105,107,111,113,],[39,39,72,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'MINUS':([23,24,35,37,38,39,72,75,76,77,95,106,120,121,122,123,124,125,126,127,128,129,130,131,136,137,],[-60,-61,-49,-47,-46,-48,-48,-50,104,-51,104,104,-56,104,104,-55,-54,104,104,-52,104,-53,104,104,-51,104,]),'NEQ':([23,24,35,37,38,39,72,75,76,77,95,120,123,124,127,129,],[-60,-61,-49,-47,-46,-48,-48,-50,105,-51,105,-56,-55,-54,-52,-53,]),'PRE':([59,61,],[63,63,]),'GEQ':([23,24,35,37,38,39,72,75,76,77,95,120,123,124,127,129,],[-60,-61,-49,-47,-46,-48,-48,-50,96,-51,96,-56,-55,-54,-52,-53,]),'LE':([23,24,35,37,38,39,72,75,76,77,95,120,123,124,127,129,],[-60,-61,-49,-47,-46,-48,-48,-50,97,-51,97,-56,-55,-54,-52,-53,]),'RPAREN':([23,24,28,35,37,38,39,51,52,54,71,72,73,75,76,77,94,95,106,114,115,117,119,120,121,122,123,124,125,126,127,128,129,130,131,133,],[-60,-61,34,-49,-47,-46,-48,56,57,58,91,93,-12,-50,-13,-51,119,120,-16,138,-14,-15,-17,-56,-20,-23,-55,-54,-21,-22,-52,-18,-53,-19,120,140,]),'SEMI':([23,24,25,27,35,36,37,38,39,40,57,75,77,91,93,112,120,123,124,127,129,136,137,138,],[-60,-61,30,32,-49,42,-47,-46,-48,43,60,-50,-51,116,118,134,-56,-55,-54,-52,-53,-51,141,142,]),'RCURLY':([8,13,16,17,18,20,26,30,32,41,42,43,45,47,49,50,53,60,66,68,69,70,79,80,82,83,84,85,87,89,108,109,110,132,134,135,139,141,142,143,144,147,148,149,],[-41,-41,-40,-41,-38,-39,31,-42,-44,-41,-43,-45,-6,-41,55,-5,-4,-9,70,79,-41,-7,-8,-28,109,-27,-26,-41,-30,-29,-41,-24,-25,139,-36,-35,-33,-34,-32,-41,145,-41,149,-31,]),'AGENT':([0,],[2,]),'BY':([23,24,35,37,38,39,72,75,76,77,95,106,120,121,122,123,124,125,126,127,128,129,130,131,136,137,],[-60,-61,-49,-47,-46,-48,-48,-50,98,-51,98,98,-56,98,98,-55,-54,98,98,98,98,98,98,98,-51,98,]),'INIT':([5,8,13,14,16,18,20,30,31,32,42,43,],[-41,-41,-41,22,-40,-38,-39,-42,-37,-44,-43,-45,]),'PLUS':([23,24,35,37,38,39,72,75,76,77,95,106,120,121,122,123,124,125,126,127,128,129,130,131,136,137,],[-60,-61,-49,-47,-46,-48,-48,-50,102,-51,102,102,-56,102,102,-55,-54,102,102,-52,102,-53,102,102,-51,102,]),'EXIT':([41,45,47,60,70,79,],[48,-6,48,-9,-7,-8,]),'$end':([1,21,55,],[0,-1,-3,]),'INCR':([23,24,88,],[-60,-61,112,]),'TIMES':([23,24,35,37,38,39,72,75,76,77,95,106,120,121,122,123,124,125,126,127,128,129,130,131,136,137,],[-60,-61,-49,-47,-46,-48,-48,-50,99,-51,99,99,-56,99,99,-55,-54,99,99,99,99,99,99,99,-51,99,]),'GE':([23,24,35,37,38,39,72,75,76,77,95,120,123,124,127,129,],[-60,-61,-49,-47,-46,-48,-48,-50,101,-51,101,-56,-55,-54,-52,-53,]),'EQLS':([23,24,25,27,88,],[-60,-61,29,33,113,]),'LPAREN':([22,23,24,44,46,48,63,67,74,78,86,88,90,92,96,97,98,99,100,101,102,103,104,105,107,111,113,136,],[28,-60,-61,51,52,54,67,74,74,107,111,114,74,74,107,107,107,107,107,107,107,107,107,107,107,74,107,114,]),'ELSE':([145,],[146,]),'EQ':([23,24,35,37,38,39,72,75,76,77,95,120,123,124,127,129,],[-60,-61,-49,-47,-46,-48,-48,-50,103,-51,103,-56,-55,-54,-52,-53,]),'EFF':([62,64,116,118,],[65,65,-10,-11,]),'IF':([69,80,83,85,87,89,108,134,135,139,141,142,143,147,149,],[86,-28,-27,86,-30,-29,86,-36,-35,-33,-34,-32,86,86,-31,]),'AND':([23,24,35,37,38,39,71,72,73,75,76,77,94,95,106,115,117,119,120,121,122,123,124,125,126,127,128,129,130,133,],[-60,-61,-49,-47,-46,-48,90,-48,-12,-50,-13,-51,90,-13,-16,90,90,-17,-56,-20,-23,-55,-54,-21,-22,-52,-18,-53,-19,90,]),'FALSE':([29,33,67,74,78,90,92,96,97,98,99,100,101,102,103,104,105,107,111,113,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'INT':([5,8,12,13,17,30,31,32,42,43,],[9,9,9,9,9,-42,-37,-44,-43,-45,]),'FLOAT':([5,8,12,13,17,30,31,32,42,43,],[10,10,10,10,10,-42,-37,-44,-43,-45,]),'LEQ':([23,24,35,37,38,39,72,75,76,77,95,120,123,124,127,129,],[-60,-61,-49,-47,-46,-48,-48,-50,100,-51,100,-56,-55,-54,-52,-53,]),'MW':([3,7,],[6,-2,]),'BOOL':([5,8,12,13,17,30,31,32,42,43,],[11,11,11,11,11,-42,-37,-44,-43,-45,]),'INUM':([29,33,67,74,78,90,92,96,97,98,99,100,101,102,103,104,105,107,111,113,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'NOT':([67,74,90,92,111,],[78,78,78,78,78,]),'SHARED':([5,8,13,17,30,31,32,42,43,],[12,12,12,12,-42,-37,-44,-43,-45,]),'OR':([23,24,35,37,38,39,71,72,73,75,76,77,94,95,106,115,117,119,120,121,122,123,124,125,126,127,128,129,130,133,],[-60,-61,-49,-47,-46,-48,92,-48,-12,-50,-13,-51,92,-13,-16,92,92,-17,-56,-20,-23,-55,-54,-21,-22,-52,-18,-53,-19,92,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([5,8,13,17,],[8,8,8,8,]),'pre':([59,61,],[62,64,]),'ite':([69,85,108,143,147,],[80,80,80,80,80,]),'mwblock':([3,],[5,]),'agentDecl':([0,],[3,]),'cond':([67,74,90,92,111,],[71,94,115,117,133,]),'atomic':([69,85,108,143,147,],[89,89,89,89,89,]),'event':([41,47,],[47,47,]),'sharedecl':([5,8,13,17,],[13,13,13,13,]),'val':([29,33,67,74,78,90,92,96,97,98,99,100,101,102,103,104,105,107,111,113,],[36,40,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'stmts':([69,85,108,143,147,],[82,110,132,144,148,]),'asgn':([69,85,108,143,147,],[83,83,83,83,83,]),'rel':([67,74,90,92,111,],[73,73,73,73,73,]),'type':([5,8,12,13,17,],[15,15,19,15,15,]),'events':([41,47,],[49,53,]),'eff':([62,64,],[66,68,]),'pgm':([0,],[1,]),'initblock':([14,],[21,]),'robotinit':([41,47,],[45,45,]),'stmt':([69,85,108,143,147,],[85,85,85,85,85,]),'funcCall':([69,85,108,113,143,147,],[87,87,87,135,87,87,]),'varname':([15,19,41,47,67,69,74,78,85,90,92,96,97,98,99,100,101,102,103,104,105,107,108,111,113,143,147,],[25,27,44,44,77,88,77,77,88,77,77,77,77,77,77,77,77,77,77,77,77,77,88,77,136,88,88,]),'empty':([5,8,13,17,41,47,69,85,108,143,147,],[16,16,16,16,50,50,84,84,84,84,84,]),'expr':([67,74,78,90,92,96,97,98,99,100,101,102,103,104,105,107,111,113,],[76,95,106,76,76,121,122,123,124,125,126,127,128,129,130,131,76,137,]),'decls':([5,8,13,17,],[14,18,20,26,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pgm","S'",1,None,None,None),
  ('pgm -> agentDecl mwblock decls initblock','pgm',4,'p_pgm','parser.py',17),
  ('agentDecl -> AGENT BR CID','agentDecl',3,'p_agentDecl','parser.py',29),
  ('initblock -> INIT LPAREN RPAREN LCURLY events RCURLY','initblock',6,'p_initblock','parser.py',33),
  ('events -> event events','events',2,'p_events','parser.py',38),
  ('events -> empty','events',1,'p_events','parser.py',39),
  ('event -> robotinit','event',1,'p_event','parser.py',51),
  ('event -> varname LPAREN RPAREN LCURLY pre eff RCURLY','event',7,'p_event','parser.py',52),
  ('event -> EXIT LPAREN RPAREN LCURLY pre eff RCURLY','event',7,'p_event','parser.py',53),
  ('robotinit -> ROBOT LPAREN RPAREN SEMI','robotinit',4,'p_robotinit','parser.py',63),
  ('pre -> PRE LPAREN cond RPAREN SEMI','pre',5,'p_pre','parser.py',67),
  ('pre -> PRE LPAREN TRUE RPAREN SEMI','pre',5,'p_pre','parser.py',68),
  ('cond -> rel','cond',1,'p_cond','parser.py',74),
  ('cond -> expr','cond',1,'p_cond','parser.py',75),
  ('cond -> cond AND cond','cond',3,'p_cond','parser.py',76),
  ('cond -> cond OR cond','cond',3,'p_cond','parser.py',77),
  ('cond -> NOT expr','cond',2,'p_cond','parser.py',78),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond','parser.py',79),
  ('rel -> expr EQ expr','rel',3,'p_rel','parser.py',91),
  ('rel -> expr NEQ expr','rel',3,'p_rel','parser.py',92),
  ('rel -> expr GEQ expr','rel',3,'p_rel','parser.py',93),
  ('rel -> expr LEQ expr','rel',3,'p_rel','parser.py',94),
  ('rel -> expr GE expr','rel',3,'p_rel','parser.py',95),
  ('rel -> expr LE expr','rel',3,'p_rel','parser.py',96),
  ('eff -> EFF LCURLY stmts RCURLY','eff',4,'p_eff','parser.py',101),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','parser.py',106),
  ('stmts -> empty','stmts',1,'p_stmts','parser.py',107),
  ('stmt -> asgn','stmt',1,'p_stmt','parser.py',118),
  ('stmt -> ite','stmt',1,'p_stmt','parser.py',119),
  ('stmt -> atomic','stmt',1,'p_stmt','parser.py',120),
  ('stmt -> funcCall','stmt',1,'p_stmt','parser.py',121),
  ('ite -> IF LPAREN cond RPAREN LCURLY stmts RCURLY ELSE LCURLY stmts RCURLY','ite',11,'p_ite','parser.py',127),
  ('funcCall -> varname LPAREN RPAREN SEMI','funcCall',4,'p_funcCall','parser.py',131),
  ('atomic -> ATOMIC LCURLY stmts RCURLY','atomic',4,'p_atomic','parser.py',136),
  ('asgn -> varname EQLS expr SEMI','asgn',4,'p_asgn','parser.py',146),
  ('asgn -> varname EQLS funcCall','asgn',3,'p_asgn','parser.py',147),
  ('asgn -> varname INCR SEMI','asgn',3,'p_asgn','parser.py',148),
  ('mwblock -> MW LCURLY decls RCURLY','mwblock',4,'p_mwblock','parser.py',158),
  ('decls -> decl decls','decls',2,'p_decls','parser.py',167),
  ('decls -> sharedecl decls','decls',2,'p_decls','parser.py',168),
  ('decls -> empty','decls',1,'p_decls','parser.py',169),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',181),
  ('decl -> type varname SEMI','decl',3,'p_decl','parser.py',186),
  ('decl -> type varname EQLS val SEMI','decl',5,'p_decl','parser.py',187),
  ('sharedecl -> SHARED type varname SEMI','sharedecl',4,'p_sharedecl','parser.py',198),
  ('sharedecl -> SHARED type varname EQLS val SEMI','sharedecl',6,'p_sharedecl','parser.py',199),
  ('val -> INUM','val',1,'p_val','parser.py',212),
  ('val -> FNUM','val',1,'p_val','parser.py',213),
  ('val -> TRUE','val',1,'p_val','parser.py',214),
  ('val -> FALSE','val',1,'p_val','parser.py',215),
  ('expr -> val','expr',1,'p_expr','parser.py',227),
  ('expr -> varname','expr',1,'p_expr','parser.py',228),
  ('expr -> expr PLUS expr','expr',3,'p_expr','parser.py',229),
  ('expr -> expr MINUS expr','expr',3,'p_expr','parser.py',230),
  ('expr -> expr TIMES expr','expr',3,'p_expr','parser.py',231),
  ('expr -> expr BY expr','expr',3,'p_expr','parser.py',232),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','parser.py',233),
  ('type -> INT','type',1,'p_type','parser.py',246),
  ('type -> FLOAT','type',1,'p_type','parser.py',247),
  ('type -> BOOL','type',1,'p_type','parser.py',248),
  ('varname -> LID','varname',1,'p_varname','parser.py',255),
  ('varname -> CID','varname',1,'p_varname','parser.py',256),
]
