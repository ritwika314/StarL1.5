
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xac\x98\xec\x1c\x17\xfbv\x1a\x15\xbc1\x1d\na\x1e\xb3'
    
_lr_action_items = {'LID':([9,10,13,15,16,17,18,20,33,39,56,57,59,64,66,71,77,87,95,97,98,104,110,111,112,115,116,117,118,119,121,122,123,125,126,130,132,135,137,139,142,143,144,145,146,147,148,149,150,151,153,156,159,160,161,163,164,165,166,185,193,194,205,207,211,214,215,216,217,219,220,221,223,227,228,231,233,],[-94,-93,27,27,27,-90,-91,-92,27,27,27,27,27,-6,27,27,-7,-11,27,27,-8,27,27,-9,27,-35,-36,-40,-42,-44,-33,-34,-38,-43,27,-39,-37,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-51,27,-52,-62,-41,-47,27,-61,27,-60,-49,-48,-46,27,-50,-55,-45,-53,27,-54,]),'OBSTACLELIST':([5,8,11,12,19,21,23,38,40,43,52,55,62,84,],[9,9,9,9,9,9,9,-70,-72,-63,-76,-71,-77,-73,]),'RETURN':([97,115,116,117,118,119,121,122,123,125,126,130,132,165,166,185,193,194,205,211,215,216,217,219,220,221,223,227,228,231,233,],[112,-35,-36,-40,-42,-44,-33,-34,-38,-43,112,-39,-37,-51,112,-52,-62,-41,-47,-61,-60,-49,-48,-46,112,-50,-55,-45,-53,112,-54,]),'LOG':([97,115,116,117,118,119,121,122,123,125,126,130,132,165,166,185,193,194,205,211,215,216,217,219,220,221,223,227,228,231,233,],[113,-35,-36,-40,-42,-44,-33,-34,-38,-43,113,-39,-37,-51,113,-52,-62,-41,-47,-61,-60,-49,-48,-46,113,-50,-55,-45,-53,113,-54,]),'CID':([4,9,10,13,15,16,17,18,20,33,39,56,57,59,64,66,71,77,87,95,97,98,104,110,111,112,115,116,117,118,119,121,122,123,125,126,130,132,135,137,139,142,143,144,145,146,147,148,149,150,151,153,156,159,160,161,163,164,165,166,185,193,194,205,207,211,214,215,216,217,219,220,221,223,227,228,231,233,],[7,-94,-93,28,28,28,-90,-91,-92,28,28,28,28,28,-6,28,28,-7,-11,28,28,-8,28,28,-9,28,-35,-36,-40,-42,-44,-33,-34,-38,-43,28,-39,-37,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-51,28,-52,-62,-41,-47,28,-61,28,-60,-49,-48,-46,28,-50,-55,-45,-53,28,-54,]),'ITEMPOSITION':([5,8,11,12,19,21,23,38,40,43,52,55,62,84,],[10,10,10,10,10,10,10,-70,-72,-63,-76,-71,-77,-73,]),'DOREACHAVOID':([97,115,116,117,118,119,121,122,123,125,126,130,132,165,166,185,193,194,205,211,215,216,217,219,220,221,223,227,228,231,233,],[114,-35,-36,-40,-42,-44,-33,-34,-38,-43,114,-39,-37,-51,114,-52,-62,-41,-47,-61,-60,-49,-48,-46,114,-50,-55,-45,-53,114,-54,]),'FNUM':([37,53,95,104,110,112,135,137,142,143,144,145,146,147,148,149,150,151,153,160,163,164,207,214,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'ROBOT':([59,64,66,77,87,98,111,],[65,-6,65,-7,-11,-8,-9,]),'LCURLY':([6,27,28,30,54,81,83,93,134,209,230,],[23,-95,-96,39,59,86,88,97,166,220,231,]),'REMOVE':([97,115,116,117,118,119,121,122,123,125,126,130,132,165,166,185,193,194,205,211,215,216,217,219,220,221,223,227,228,231,233,],[129,-35,-36,-40,-42,-44,-33,-34,-38,-43,129,-39,-37,-51,129,-52,-62,-41,-47,-61,-60,-49,-48,-46,129,-50,-55,-45,-53,129,-54,]),'BR':([2,],[4,]),'MSG':([97,115,116,117,118,119,121,122,123,125,126,130,132,165,166,185,193,194,205,211,215,216,217,219,220,221,223,227,228,231,233,],[127,-35,-36,-40,-42,-44,-33,-34,-38,-43,127,-39,-37,-51,127,-52,-62,-41,-47,-61,-60,-49,-48,-46,127,-50,-55,-45,-53,127,-54,]),'EXIT':([59,64,66,77,87,97,98,111,115,116,117,118,119,121,122,123,125,126,130,132,165,166,185,193,194,205,211,215,216,217,219,220,221,223,227,228,231,233,],[67,-6,67,-7,-11,133,-8,-9,-35,-36,-40,-42,-44,-33,-34,-38,-43,133,-39,-37,-51,133,-52,-62,-41,-47,-61,-60,-49,-48,-46,133,-50,-55,-45,-53,133,-54,]),'NULL':([37,53,95,104,110,112,135,137,142,143,144,145,146,147,148,149,150,151,153,160,163,164,207,214,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'TRUE':([37,53,95,104,110,112,135,137,142,143,144,145,146,147,148,149,150,151,153,160,163,164,207,214,],[49,49,100,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'BY':([27,28,44,46,47,48,49,100,105,106,109,141,152,154,173,174,175,176,177,178,179,180,181,182,183,184,195,196,199,218,],[-95,-96,-81,-79,-78,-82,-80,-80,-83,144,-84,144,144,144,-89,144,144,-88,-87,144,144,144,144,144,144,144,-84,144,144,144,]),'NEQ':([27,28,44,46,47,48,49,100,105,106,109,141,173,176,177,180,182,],[-95,-96,-81,-79,-78,-82,-80,-80,-83,151,-84,151,-89,-88,-87,-85,-86,]),'PRE':([86,88,],[91,91,]),'INCR':([27,28,131,],[-95,-96,162,]),'LE':([27,28,44,46,47,48,49,100,105,106,109,141,173,176,177,180,182,],[-95,-96,-81,-79,-78,-82,-80,-80,-83,143,-84,143,-89,-88,-87,-85,-86,]),'RPAREN':([27,28,42,44,46,47,48,49,73,74,76,85,99,100,101,103,105,106,107,108,109,140,141,152,155,164,167,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,188,190,191,192,198,199,200,201,203,212,218,224,],[-95,-96,54,-81,-79,-78,-82,-80,81,82,83,89,136,138,-14,-23,-83,-15,-16,-22,-84,172,173,-20,187,-69,-18,-19,203,-21,-89,-26,-29,-88,-87,-27,-28,-85,-24,-86,-25,173,204,206,208,209,210,213,-58,-57,-56,-17,222,225,-59,]),'SEMI':([27,28,29,31,41,44,45,46,47,48,49,58,68,79,82,89,105,109,133,136,138,154,162,173,176,177,180,182,187,195,196,204,206,208,210,213,222,225,],[-95,-96,38,40,52,-81,55,-79,-78,-82,-80,62,77,84,87,-10,-83,-84,165,168,170,185,193,-89,-88,-87,-85,-86,205,-84,211,216,217,219,221,223,227,228,]),'RCURLY':([8,11,12,14,19,23,24,25,26,27,28,32,36,38,40,50,51,52,55,59,60,62,64,66,69,70,75,77,84,87,94,96,97,98,111,115,116,117,118,119,120,121,122,123,124,125,126,130,132,157,158,165,166,185,193,194,202,205,211,215,216,217,219,220,221,223,226,227,228,231,232,233,],[-69,-69,-69,-68,-69,-69,-64,-67,-65,-95,-96,-66,43,-70,-72,-75,57,-76,-71,-69,-74,-77,-6,-69,78,-5,-4,-7,-73,-11,98,111,-69,-8,-9,-35,-36,-40,-42,-44,157,-33,-34,-38,-32,-43,-69,-39,-37,-30,-31,-51,-69,-52,-62,-41,215,-47,-61,-60,-49,-48,-46,-69,-50,-55,229,-45,-53,-69,233,-54,]),'AGENT':([0,],[2,]),'MINUS':([27,28,44,46,47,48,49,100,105,106,109,141,152,154,173,174,175,176,177,178,179,180,181,182,183,184,195,196,199,218,],[-95,-96,-81,-79,-78,-82,-80,-80,-83,150,-84,150,150,150,-89,150,150,-88,-87,150,150,-85,150,-86,150,150,-84,150,150,150,]),'INIT':([5,8,11,12,14,19,22,24,25,26,32,38,40,43,52,55,62,84,],[-69,-69,-69,-69,-68,-69,35,-64,-67,-65,-66,-70,-72,-63,-76,-71,-77,-73,]),'PLUS':([27,28,44,46,47,48,49,100,105,106,109,141,152,154,173,174,175,176,177,178,179,180,181,182,183,184,195,196,199,218,],[-95,-96,-81,-79,-78,-82,-80,-80,-83,148,-84,148,148,148,-89,148,148,-88,-87,148,148,-85,148,-86,148,148,-84,148,148,148,]),'COMMA':([27,28,44,46,47,48,49,50,105,109,173,176,177,180,182,189,199,],[-95,-96,-81,-79,-78,-82,-80,56,-83,-84,-89,-88,-87,-85,-86,207,214,]),'$end':([1,34,78,],[0,-1,-3,]),'FAILFLAG':([95,104,135,137,155,160,],[103,103,103,103,186,103,]),'GETMYPOS':([72,],[80,]),'ENUM':([5,8,11,12,19,23,38,40,43,52,55,62,84,],[15,15,15,15,15,15,-70,-72,-63,-76,-71,-77,-73,]),'GEQ':([27,28,44,46,47,48,49,100,105,106,109,141,173,176,177,180,182,],[-95,-96,-81,-79,-78,-82,-80,-80,-83,142,-84,142,-89,-88,-87,-85,-86,]),'TIMES':([27,28,44,46,47,48,49,100,105,106,109,141,152,154,173,174,175,176,177,178,179,180,181,182,183,184,195,196,199,218,],[-95,-96,-81,-79,-78,-82,-80,-80,-83,145,-84,145,145,145,-89,145,145,-88,-87,145,145,145,145,145,145,145,-84,145,145,145,]),'GETINPUT':([163,],[197,]),'GE':([27,28,44,46,47,48,49,100,105,106,109,141,173,176,177,180,182,],[-95,-96,-81,-79,-78,-82,-80,-80,-83,147,-84,147,-89,-88,-87,-85,-86,]),'EQLS':([27,28,29,41,61,63,131,],[-95,-96,37,53,71,72,163,]),'LPAREN':([27,28,35,63,65,67,80,91,95,102,104,110,112,113,114,127,128,129,131,135,137,142,143,144,145,146,147,148,149,150,151,153,160,163,164,195,197,207,214,],[-95,-96,42,73,74,76,85,95,104,139,104,153,153,155,156,159,160,161,164,104,104,153,153,153,153,153,153,153,153,153,153,153,104,153,153,164,212,153,153,]),'ELSE':([229,],[230,]),'EQ':([27,28,44,46,47,48,49,100,105,106,109,141,173,176,177,180,182,],[-95,-96,-81,-79,-78,-82,-80,-80,-83,149,-84,149,-89,-88,-87,-85,-86,]),'EFF':([90,92,168,170,],[93,93,-12,-13,]),'IF':([97,115,116,117,118,119,121,122,123,125,126,130,132,165,166,185,193,194,205,211,215,216,217,219,220,221,223,227,228,231,233,],[128,-35,-36,-40,-42,-44,-33,-34,-38,-43,128,-39,-37,-51,128,-52,-62,-41,-47,-61,-60,-49,-48,-46,128,-50,-55,-45,-53,128,-54,]),'AND':([27,28,44,46,47,48,49,99,100,101,103,105,106,107,108,109,140,141,152,167,169,172,173,174,175,176,177,178,179,180,181,182,183,191,203,],[-95,-96,-81,-79,-78,-82,-80,135,-80,-14,-23,-83,-15,-16,-22,-84,135,-15,-20,135,135,-21,-89,-26,-29,-88,-87,-27,-28,-85,-24,-86,-25,135,-17,]),'MAP':([5,8,11,12,19,23,38,40,43,52,55,62,84,],[16,16,16,16,16,16,-70,-72,-63,-76,-71,-77,-73,]),'ISEMPTY':([95,104,135,137,160,],[102,102,102,102,102,]),'FALSE':([37,53,95,104,110,112,135,137,142,143,144,145,146,147,148,149,150,151,153,160,163,164,207,214,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'INT':([5,8,11,12,19,21,23,38,40,43,52,55,62,84,],[17,17,17,17,17,17,17,-70,-72,-63,-76,-71,-77,-73,]),'FLOAT':([5,8,11,12,19,21,23,38,40,43,52,55,62,84,],[18,18,18,18,18,18,18,-70,-72,-63,-76,-71,-77,-73,]),'DONEFLAG':([95,104,135,137,155,160,],[108,108,108,108,188,108,]),'LEQ':([27,28,44,46,47,48,49,100,105,106,109,141,173,176,177,180,182,],[-95,-96,-81,-79,-78,-82,-80,-80,-83,146,-84,146,-89,-88,-87,-85,-86,]),'MW':([3,7,],[6,-2,]),'BOOL':([5,8,11,12,19,21,23,38,40,43,52,55,62,84,],[20,20,20,20,20,20,20,-70,-72,-63,-76,-71,-77,-73,]),'INUM':([37,53,95,104,110,112,135,137,142,143,144,145,146,147,148,149,150,151,153,160,163,164,207,214,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'NOT':([95,104,135,137,160,],[110,110,110,110,110,]),'SHARED':([5,8,11,12,19,23,38,40,43,52,55,62,84,],[21,21,21,21,21,21,-70,-72,-63,-76,-71,-77,-73,]),'OR':([27,28,44,46,47,48,49,99,100,101,103,105,106,107,108,109,140,141,152,167,169,172,173,174,175,176,177,178,179,180,181,182,183,191,203,],[-95,-96,-81,-79,-78,-82,-80,137,-80,-14,-23,-83,-15,-16,-22,-84,137,-15,-20,137,137,-21,-89,-26,-29,-88,-87,-27,-28,-85,-24,-86,-25,137,-17,]),'ATOMIC':([97,115,116,117,118,119,121,122,123,125,126,130,132,165,166,185,193,194,205,211,215,216,217,219,220,221,223,227,228,231,233,],[134,-35,-36,-40,-42,-44,-33,-34,-38,-43,134,-39,-37,-51,134,-52,-62,-41,-47,-61,-60,-49,-48,-46,134,-50,-55,-45,-53,134,-54,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([5,8,11,12,19,23,],[8,8,8,8,8,8,]),'pre':([86,88,],[90,92,]),'pgm':([0,],[1,]),'mwblock':([3,],[5,]),'agentDecl':([0,],[3,]),'cond':([95,104,135,137,160,],[99,140,167,169,191,]),'mapdecl':([5,8,11,12,19,23,],[11,11,11,11,11,11,]),'getInput':([97,126,166,220,231,],[117,117,117,117,117,]),'return':([97,126,166,220,231,],[125,125,125,125,125,]),'doreachavoid':([97,126,166,220,231,],[118,118,118,118,118,]),'event':([59,66,],[66,66,]),'getpos':([59,66,],[68,68,]),'log':([97,126,166,220,231,],[119,119,119,119,119,]),'val':([37,53,95,104,110,112,135,137,142,143,144,145,146,147,148,149,150,151,153,160,163,164,207,214,],[45,58,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'stmts':([97,126,166,220,231,],[120,158,202,226,232,]),'asgn':([97,126,166,220,231,],[121,121,121,121,121,]),'varnames':([39,56,],[51,60,]),'exit':([97,126,166,220,231,],[122,122,122,122,122,]),'rel':([95,104,135,137,160,],[101,101,101,101,101,]),'msg':([97,126,166,220,231,],[123,123,123,123,123,]),'neargs':([164,214,],[200,224,]),'type':([5,8,11,12,19,21,23,],[13,13,13,13,13,33,13,]),'events':([59,66,],[69,75,]),'eff':([90,92,],[94,96,]),'ite':([97,126,166,220,231,],[115,115,115,115,115,]),'initblock':([22,],[34,]),'robotinit':([59,66,],[64,64,]),'args':([164,],[198,]),'stmt':([97,126,166,220,231,],[126,126,126,126,126,]),'flag':([95,104,135,137,160,],[107,107,107,107,107,]),'sharedecl':([5,8,11,12,19,23,],[12,12,12,12,12,12,]),'funcCall':([97,126,163,166,220,231,],[130,130,194,130,130,130,]),'varname':([13,15,16,33,39,56,57,59,66,71,95,97,104,110,112,126,135,137,139,142,143,144,145,146,147,148,149,150,151,153,156,159,160,161,163,164,166,207,214,220,231,],[29,30,31,41,50,50,61,63,63,79,109,131,109,109,109,131,109,109,171,109,109,109,109,109,109,109,109,109,109,109,189,190,109,192,195,109,131,109,109,131,131,]),'remove':([97,126,166,220,231,],[132,132,132,132,132,]),'enumdecl':([5,8,11,12,19,23,],[19,19,19,19,19,19,]),'empty':([5,8,11,12,19,23,59,66,97,126,164,166,220,231,],[14,14,14,14,14,14,70,70,124,124,201,124,124,124,]),'expr':([95,104,110,112,135,137,142,143,144,145,146,147,148,149,150,151,153,160,163,164,207,214,],[106,141,152,154,106,106,174,175,176,177,178,179,180,181,182,183,184,106,196,199,218,199,]),'decls':([5,8,11,12,19,23,],[22,24,25,26,32,36,]),'atomic':([97,126,166,220,231,],[116,116,116,116,116,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> pgm","S'",1,None,None,None),
  ('pgm -> agentDecl mwblock decls initblock','pgm',4,'p_pgm','parser.py',17),
  ('agentDecl -> AGENT BR CID','agentDecl',3,'p_agentDecl','parser.py',29),
  ('initblock -> INIT LPAREN RPAREN LCURLY events RCURLY','initblock',6,'p_initblock','parser.py',33),
  ('events -> event events','events',2,'p_events','parser.py',38),
  ('events -> empty','events',1,'p_events','parser.py',39),
  ('event -> robotinit','event',1,'p_event','parser.py',51),
  ('event -> getpos SEMI','event',2,'p_event','parser.py',52),
  ('event -> varname LPAREN RPAREN LCURLY pre eff RCURLY','event',7,'p_event','parser.py',53),
  ('event -> EXIT LPAREN RPAREN LCURLY pre eff RCURLY','event',7,'p_event','parser.py',54),
  ('getpos -> varname EQLS GETMYPOS LPAREN RPAREN','getpos',5,'p_getpos','parser.py',67),
  ('robotinit -> ROBOT LPAREN RPAREN SEMI','robotinit',4,'p_robotinit','parser.py',71),
  ('pre -> PRE LPAREN cond RPAREN SEMI','pre',5,'p_pre','parser.py',75),
  ('pre -> PRE LPAREN TRUE RPAREN SEMI','pre',5,'p_pre','parser.py',76),
  ('cond -> rel','cond',1,'p_cond','parser.py',83),
  ('cond -> expr','cond',1,'p_cond','parser.py',84),
  ('cond -> flag','cond',1,'p_cond','parser.py',85),
  ('cond -> ISEMPTY LPAREN varname RPAREN','cond',4,'p_cond','parser.py',86),
  ('cond -> cond AND cond','cond',3,'p_cond','parser.py',87),
  ('cond -> cond OR cond','cond',3,'p_cond','parser.py',88),
  ('cond -> NOT expr','cond',2,'p_cond','parser.py',89),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond','parser.py',90),
  ('flag -> DONEFLAG','flag',1,'p_flag','parser.py',104),
  ('flag -> FAILFLAG','flag',1,'p_flag','parser.py',105),
  ('rel -> expr EQ expr','rel',3,'p_rel','parser.py',109),
  ('rel -> expr NEQ expr','rel',3,'p_rel','parser.py',110),
  ('rel -> expr GEQ expr','rel',3,'p_rel','parser.py',111),
  ('rel -> expr LEQ expr','rel',3,'p_rel','parser.py',112),
  ('rel -> expr GE expr','rel',3,'p_rel','parser.py',113),
  ('rel -> expr LE expr','rel',3,'p_rel','parser.py',114),
  ('eff -> EFF LCURLY stmts RCURLY','eff',4,'p_eff','parser.py',119),
  ('stmts -> stmt stmts','stmts',2,'p_stmts','parser.py',124),
  ('stmts -> empty','stmts',1,'p_stmts','parser.py',125),
  ('stmt -> asgn','stmt',1,'p_stmt','parser.py',136),
  ('stmt -> exit','stmt',1,'p_stmt','parser.py',137),
  ('stmt -> ite','stmt',1,'p_stmt','parser.py',138),
  ('stmt -> atomic','stmt',1,'p_stmt','parser.py',139),
  ('stmt -> remove','stmt',1,'p_stmt','parser.py',140),
  ('stmt -> msg','stmt',1,'p_stmt','parser.py',141),
  ('stmt -> funcCall','stmt',1,'p_stmt','parser.py',142),
  ('stmt -> getInput','stmt',1,'p_stmt','parser.py',143),
  ('stmt -> varname EQLS funcCall','stmt',3,'p_stmt','parser.py',144),
  ('stmt -> doreachavoid','stmt',1,'p_stmt','parser.py',145),
  ('stmt -> return','stmt',1,'p_stmt','parser.py',146),
  ('stmt -> log','stmt',1,'p_stmt','parser.py',147),
  ('getInput -> varname EQLS GETINPUT LPAREN RPAREN SEMI','getInput',6,'p_getInput','parser.py',158),
  ('msg -> MSG LPAREN varname RPAREN SEMI','msg',5,'p_msg','parser.py',162),
  ('log -> LOG LPAREN RPAREN SEMI','log',4,'p_log','parser.py',167),
  ('log -> LOG LPAREN DONEFLAG RPAREN SEMI','log',5,'p_log','parser.py',168),
  ('log -> LOG LPAREN FAILFLAG RPAREN SEMI','log',5,'p_log','parser.py',169),
  ('remove -> REMOVE LPAREN varname RPAREN SEMI','remove',5,'p_remove','parser.py',177),
  ('exit -> EXIT SEMI','exit',2,'p_exit','parser.py',183),
  ('return -> RETURN expr SEMI','return',3,'p_return','parser.py',187),
  ('doreachavoid -> DOREACHAVOID LPAREN varname COMMA expr RPAREN SEMI','doreachavoid',7,'p_callreachavoid','parser.py',190),
  ('ite -> IF LPAREN cond RPAREN LCURLY stmts RCURLY ELSE LCURLY stmts RCURLY','ite',11,'p_ite','parser.py',194),
  ('funcCall -> varname LPAREN args RPAREN SEMI','funcCall',5,'p_funcCall','parser.py',198),
  ('args -> empty','args',1,'p_args','parser.py',202),
  ('args -> neargs','args',1,'p_args','parser.py',203),
  ('neargs -> expr','neargs',1,'p_neargs','parser.py',209),
  ('neargs -> expr COMMA neargs','neargs',3,'p_neargs','parser.py',210),
  ('atomic -> ATOMIC LCURLY stmts RCURLY','atomic',4,'p_atomic','parser.py',221),
  ('asgn -> varname EQLS expr SEMI','asgn',4,'p_asgn','parser.py',231),
  ('asgn -> varname INCR SEMI','asgn',3,'p_asgn','parser.py',232),
  ('mwblock -> MW LCURLY decls RCURLY','mwblock',4,'p_mwblock','parser.py',242),
  ('decls -> decl decls','decls',2,'p_decls','parser.py',252),
  ('decls -> sharedecl decls','decls',2,'p_decls','parser.py',253),
  ('decls -> enumdecl decls','decls',2,'p_decls','parser.py',254),
  ('decls -> mapdecl decls','decls',2,'p_decls','parser.py',255),
  ('decls -> empty','decls',1,'p_decls','parser.py',256),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',268),
  ('decl -> type varname SEMI','decl',3,'p_decl','parser.py',273),
  ('decl -> type varname EQLS val SEMI','decl',5,'p_decl','parser.py',274),
  ('mapdecl -> MAP varname SEMI','mapdecl',3,'p_mapdecl','parser.py',285),
  ('enumdecl -> ENUM varname LCURLY varnames RCURLY varname EQLS varname SEMI','enumdecl',9,'p_enumdecl','parser.py',289),
  ('varnames -> varname COMMA varnames','varnames',3,'p_varnames','parser.py',298),
  ('varnames -> varname','varnames',1,'p_varnames','parser.py',299),
  ('sharedecl -> SHARED type varname SEMI','sharedecl',4,'p_sharedecl','parser.py',309),
  ('sharedecl -> SHARED type varname EQLS val SEMI','sharedecl',6,'p_sharedecl','parser.py',310),
  ('val -> INUM','val',1,'p_val','parser.py',322),
  ('val -> FNUM','val',1,'p_val','parser.py',323),
  ('val -> TRUE','val',1,'p_val','parser.py',324),
  ('val -> FALSE','val',1,'p_val','parser.py',325),
  ('val -> NULL','val',1,'p_val','parser.py',326),
  ('expr -> val','expr',1,'p_expr','parser.py',338),
  ('expr -> varname','expr',1,'p_expr','parser.py',339),
  ('expr -> expr PLUS expr','expr',3,'p_expr','parser.py',340),
  ('expr -> expr MINUS expr','expr',3,'p_expr','parser.py',341),
  ('expr -> expr TIMES expr','expr',3,'p_expr','parser.py',342),
  ('expr -> expr BY expr','expr',3,'p_expr','parser.py',343),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','parser.py',344),
  ('type -> INT','type',1,'p_type','parser.py',357),
  ('type -> FLOAT','type',1,'p_type','parser.py',358),
  ('type -> BOOL','type',1,'p_type','parser.py',359),
  ('type -> ITEMPOSITION','type',1,'p_type','parser.py',360),
  ('type -> OBSTACLELIST','type',1,'p_type','parser.py',361),
  ('varname -> LID','varname',1,'p_varname','parser.py',368),
  ('varname -> CID','varname',1,'p_varname','parser.py',369),
]
